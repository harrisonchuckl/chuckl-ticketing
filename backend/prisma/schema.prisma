// Prisma schema for Chuckl. Ticketing

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// -----------------------------
// ENUMS
// -----------------------------

enum OrderStatus {
  PENDING
  PAID
  CANCELLED
}

enum TicketStatus {
  VALID
  USED
  CANCELLED
}

// -----------------------------
// MODELS
// -----------------------------

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String?
  orders    Order[]
  tickets   Ticket[]
  createdAt DateTime @default(now())
}

model Venue {
  id        String   @id @default(cuid())
  name      String
  address   String?
  city      String?
  postcode  String?
  capacity  Int?
  shows     Show[]
  createdAt DateTime @default(now())
}

model Show {
  id          String       @id @default(cuid())
  venueId     String
  venue       Venue        @relation(fields: [venueId], references: [id])
  title       String
  description String?
  date        DateTime     @default(now())   // âœ… Added default so migration can apply safely
  tickets     Ticket[]
  orders      Order[]
  ticketTypes TicketType[]
  createdAt   DateTime     @default(now())

  @@index([venueId])
  @@index([date])
}

model TicketType {
  id          String   @id @default(cuid())
  showId      String
  show        Show     @relation(fields: [showId], references: [id])
  name        String
  pricePence  Int
  available   Int?
  createdAt   DateTime @default(now())

  @@index([showId])
}

model Order {
  id           String       @id @default(cuid())
  showId       String
  show         Show         @relation(fields: [showId], references: [id])
  userId       String?
  user         User?        @relation(fields: [userId], references: [id])
  email        String
  quantity     Int
  amountPence  Int
  stripeId     String
  status       OrderStatus  @default(PENDING)
  tickets      Ticket[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@index([showId])
  @@index([userId])
  @@index([status])
}

model Ticket {
  id         String       @id @default(cuid())
  orderId    String
  order      Order        @relation(fields: [orderId], references: [id])
  showId     String
  show       Show         @relation(fields: [showId], references: [id])
  serial     String       @unique
  qrData     String
  status     TicketStatus @default(VALID)
  holderName String?
  createdAt  DateTime     @default(now())
  scannedAt  DateTime?
  userId     String?
  user       User?        @relation(fields: [userId], references: [id])

  @@index([orderId])
  @@index([showId])
  @@index([userId])
}
